/*!
 * Copyright 2019, OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ExportResult } from '@opentelemetry/base';
import { ReadableSpan, SpanExporter } from '@opentelemetry/tracing';
import * as jaegerTypes from './types';
/**
 * Format and sends span information to Jaeger Exporter.
 */
export declare class JaegerExporter implements SpanExporter {
    private readonly _logger;
    private readonly _process;
    private readonly _sender;
    private readonly _forceFlushOnShutdown;
    private readonly _onShutdownFlushTimeout;
    constructor(config: jaegerTypes.ExporterConfig);
    /** Exports a list of spans to Jaeger. */
    export(spans: ReadableSpan[], resultCallback: (result: ExportResult) => void): void;
    /** Shutdown exporter. */
    shutdown(): void;
    /** Transform spans and sends to Jaeger service. */
    private _sendSpans;
    private _append;
    private _flush;
}
